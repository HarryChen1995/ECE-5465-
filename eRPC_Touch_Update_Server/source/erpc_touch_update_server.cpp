/*
 * Generated by erpcgen 1.7.1 on Thu Mar  7 19:11:19 2019.
 *
 * AUTOGENERATED - DO NOT EDIT
 */


#include "erpc_touch_update_server.h"
#include <new>
#include "erpc_port.h"
#include "erpc_manually_constructed.h"

#if 10701 != ERPC_VERSION_NUMBER
#error "The generated shim code version is different to the rest of eRPC code."
#endif

using namespace erpc;
using namespace std;

#if ERPC_NESTED_CALLS_DETECTION
extern bool nestingDetection;
#endif

static ManuallyConstructed<TouchUpdateService_service> s_TouchUpdateService_service;



// Call the correct server shim based on method unique ID.
erpc_status_t TouchUpdateService_service::handleInvocation(uint32_t methodId, uint32_t sequence, Codec * codec, MessageBufferFactory *messageFactory)
{
    switch (methodId)
    {
        case kTouchUpdateService_erpcTouchUpdate_id:
            return erpcTouchUpdate_shim(codec, messageFactory, sequence);

        default:
            return kErpcStatus_InvalidArgument;
    }
}

// Server shim for erpcTouchUpdate of TouchUpdateService interface.
erpc_status_t TouchUpdateService_service::erpcTouchUpdate_shim(Codec * codec, MessageBufferFactory *messageFactory, uint32_t sequence)
{
    erpc_status_t err = kErpcStatus_Success;

    int32_t percent;

    // startReadMessage() was already called before this shim was invoked.

    codec->read(&percent);

    err = codec->getStatus();
    if (!err)
    {
        // Invoke the actual served function.
#if ERPC_NESTED_CALLS_DETECTION
        nestingDetection = true;
#endif
        erpcTouchUpdate(percent);
#if ERPC_NESTED_CALLS_DETECTION
        nestingDetection = false;
#endif

        // preparing MessageBuffer for serializing data
        err = messageFactory->prepareServerBufferForSend(codec->getBuffer());
    }

    if (!err)
    {
        // preparing codec for serializing data
        codec->reset();

        // Build response message.
        codec->startWriteMessage(kReplyMessage, kTouchUpdateService_service_id, kTouchUpdateService_erpcTouchUpdate_id, sequence);

        err = codec->getStatus();
    }

    return err;
}

erpc_service_t create_TouchUpdateService_service()
{
    s_TouchUpdateService_service.construct();
    return s_TouchUpdateService_service.get();
}
